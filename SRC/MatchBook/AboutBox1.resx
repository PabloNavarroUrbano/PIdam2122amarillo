<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>